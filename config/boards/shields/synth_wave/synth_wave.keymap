/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    
    keymap {
        compatible = "zmk,keymap";
        qwerty_layer {
            label = "QWERTY";
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T                       &kp Y   &kp U     &kp I   &kp O   &kp P   &kp BSPC
                &kp LSHIFT &kp A &kp S &kp D &kp F &kp G                    &kp H   &kp J     &kp K   &kp L   &kp SEMICOLON    &kp SINGLE_QUOTE
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B                     &kp N   &kp M   &kp COMMA &kp DOT &kp SLASH &kp ESC
                            &kp C_MUTE &kp LGUI &kp TAB &kp SPACE        &trans &kp ENTER &mo 1 &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        number_layer {
            label = "NUMBER";
            bindings = <
                &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6                                     &kp N7 &kp N8 &kp N9 &kp N0 &trans &kp BSPC
                &trans &trans &trans &mkp LCLK &mkp RCLK &trans                               &trans &trans &trans &trans &kp UP_ARROW &trans
                &kp EQUAL &kp MINUS &kp ASTERISK &kp SLASH &trans &trans  &mkp LCLK &mkp RCLK &trans &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW
                                            &trans &trans &trans &trans     &trans &tog 3 &trans &mo 2
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        function_layer {
            label = "FUNCTION";
            bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                       &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
                &bt BT_CLR &bt BT_CLR_ALL &trans &trans &trans &trans           &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI
                &bt BT_PRV &bt BT_NXT &trans &trans &trans &trans               &trans &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD
                                        &bootloader  &trans &trans &trans     &bootloader &trans &trans &trans
            >;
            sensor-bindings = <&bt_encoder &rgb_encoder>;
        };
        game_layer {
            label = "GAME";
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp G                     &trans &trans &trans &trans &trans &trans
                &kp LSHIFT &kp A &kp S &kp D &kp F &kp T                  &trans &trans &trans &trans &trans &trans
                &kp LCTRL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5              &trans &trans &trans &trans &trans &trans
                            &kp C_MUTE &kp B &trans &kp SPACE       &trans &tog 3 &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};